// <auto-generated />
using System;
using HoopStats.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HoopStats.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("HoopStats.Models.GameStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Assists")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Blocks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DefensiveRebounds")
                        .HasColumnType("INTEGER");

                    b.Property<double>("FieldGoalPercentage")
                        .HasColumnType("REAL");

                    b.Property<int>("FieldGoalsAttempted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FieldGoalsMade")
                        .HasColumnType("INTEGER");

                    b.Property<double>("FreeThrowPercentage")
                        .HasColumnType("REAL");

                    b.Property<int>("FreeThrowsAttempted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FreeThrowsMade")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("TEXT");

                    b.Property<double>("GameScore")
                        .HasColumnType("REAL");

                    b.Property<double>("MinutesPlayed")
                        .HasColumnType("REAL");

                    b.Property<int>("OffensiveRebounds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Opponent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonalFouls")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Player")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Steals")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Team")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("ThreePointPercentage")
                        .HasColumnType("REAL");

                    b.Property<int>("ThreePointersAttempted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ThreePointersMade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalRebounds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Turnovers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameDate");

                    b.HasIndex("Player");

                    b.HasIndex("Team", "Opponent");

                    b.ToTable("GameStats");
                });

            modelBuilder.Entity("HoopStats.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
